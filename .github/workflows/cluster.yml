name: Deploy to Amazon EKS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Set up AWS Credentials
      - name: Set up AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
     
      # Step 3: Create Amazon EKS Cluster
      - name: Create Amazon EKS Cluster
        run: |
          aws eks create-cluster \
            --name cluster1 \
            --role-arn arn:aws:iam::975050029356:role/aws-service-role/eks.amazonaws.com/AWSServiceRoleForAmazonEKS \
            --resources-vpc-config subnetIds=subnet-0268718dbb841798e,subnet-0da5a1be33156c695 \
            --region ${{ secrets.AWS_REGION }}
     
      # Step 4: Wait for Cluster Creation
      - name: Wait for Cluster Creation
        run: |
          while [[ "$(aws eks describe-cluster --name mycluster1 --query 'cluster.status' --output text)" != "ACTIVE" ]]; do
            sleep 10
          done
    
      # Step 5: Configure kubectl
      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name mycluster1

      # Step 6: Deploy Docker Image to EKS Cluster
      - name: Deploy to Amazon EKS
        run: |
          kubectl apply -f app/deployment.yml



